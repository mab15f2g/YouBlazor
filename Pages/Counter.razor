@using System.Diagnostics;
@page "/counter"



<p>Link: @linkToVideo </p>
<input @bind = "inputLink" / >


<br />
<br />
<p>
<select class="d-flex" @bind="selectedFormat">
    <option value="">select Format</option>
    <option value=" -x -mp3">Audio(mp3)</option>
    <option value="-mp4">Video(mp4)</option>
</select>
</p>

<br />
<br />
<p>
<MudSlider @bind-Value="@bitrate" Min="20" Max="80" Color="Color.Info">Value: @bitrate.ToString()</MudSlider>
<input type="range" min="128" max="320" step="1" @bind="@bitrate" />
<p>Bitrate: @bitrate</p>
</p>
<p>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="Download">Download</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="testLaunch">LauchDownload</MudButton>
</p>


@code {  

    private string inputLink = "";
    private string linkToVideo =  "";
    private string selectedFormat = "";
    private int bitrate = 128;

    List<string> arguments = new List<string>();   
    
    
    private void Download()
    {               
        arguments.Add(selectedFormat);
        arguments.Add(bitrate.ToString());   
        arguments.Add(inputLink.ToString()); 
        linkToVideo = String.Join(" ", arguments.ToArray());

    }

    private void testLaunch()
    {
         Process.Start("youtube-dl.exe","-x  https://www.youtube.com/watch?v=QoDESU7aM_o");
    }

    private void LauchDownload()
    {
        
        // For the example
        // startInfo.Arguments = "-f j -o \"" + ex1 + "\" -z 1.0 -s y " + ex2;
        //const string ex1 = "C:\\";
        // const string ex2 = "C:\\Dir";


        // Use ProcessStartInfo class
        ProcessStartInfo startInfo = new ProcessStartInfo();
        startInfo.CreateNoWindow = false;
        startInfo.UseShellExecute = true;
        startInfo.FileName = "youtube-dl.exe";
        //startInfo.WindowStyle = ProcessWindowStyle.Hidden;
        startInfo.Arguments = "-x -mp3 259 https://www.youtube.com/watch?v=QoDESU7aM_o";

        try
        {
            // Start the process with the info we specified.
            // Call WaitForExit and then the using statement will close.
            using (Process exeProcess = Process.Start(startInfo))
            {
                exeProcess.WaitForExit();
            }
        }
        catch
        {
             // Log error.
        }
    }

}
